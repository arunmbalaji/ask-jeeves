// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Nested navigators renders succesfully as direct child 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "column-reverse",
        },
        Object {
          "backgroundColor": "#000",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        collapsable={undefined}
        pointerEvents="auto"
        style={
          Object {
            "backgroundColor": "#E9E9EF",
            "bottom": 0,
            "left": 0,
            "marginTop": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "shadowColor": "black",
            "shadowOffset": Object {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0.2,
            "shadowRadius": 5,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            style={
              Array [
                Object {
                  "flex": 1,
                  "flexDirection": "column-reverse",
                },
                Object {
                  "backgroundColor": "#000",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={undefined}
                pointerEvents="auto"
                style={
                  Object {
                    "backgroundColor": "#E9E9EF",
                    "bottom": 0,
                    "left": 0,
                    "marginTop": 0,
                    "opacity": 1,
                    "position": "absolute",
                    "right": 0,
                    "shadowColor": "black",
                    "shadowOffset": Object {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0.2,
                    "shadowRadius": 5,
                    "top": 0,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateY": 0,
                      },
                    ],
                  }
                }
              />
            </View>
            <View
              onLayout={[Function]}
              pointerEvents="box-none"
            >
              <View
                collapsable={undefined}
                style={
                  Object {
                    "backgroundColor": "#F7F7F7",
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  collapsable={undefined}
                  onLayout={[Function]}
                  pointerEvents="box-none"
                  style={
                    Object {
                      "backgroundColor": "#F7F7F7",
                      "borderBottomColor": "#A7A7AA",
                      "borderBottomWidth": 0.5,
                      "height": 64,
                      "paddingBottom": 0,
                      "paddingLeft": 0,
                      "paddingRight": 0,
                      "paddingTop": 20,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "bottom": 0,
                          "flexDirection": "row",
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    >
                      <View
                        collapsable={undefined}
                        pointerEvents="box-none"
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "bottom": 0,
                            "flexDirection": "row",
                            "justifyContent": "center",
                            "left": 0,
                            "opacity": 1,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <Text
                          accessibilityTraits="header"
                          accessible={true}
                          allowFontScaling={true}
                          collapsable={undefined}
                          ellipsizeMode="tail"
                          numberOfLines={1}
                          onLayout={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, .9)",
                              "fontSize": 17,
                              "fontWeight": "700",
                              "marginHorizontal": 16,
                              "textAlign": "center",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
    >
      <View
        collapsable={undefined}
        style={
          Object {
            "backgroundColor": "#F7F7F7",
            "transform": Array [
              Object {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <View
          collapsable={undefined}
          onLayout={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "backgroundColor": "#F7F7F7",
              "borderBottomColor": "#A7A7AA",
              "borderBottomWidth": 0.5,
              "height": 64,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 20,
            }
          }
        >
          <View
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "bottom": 0,
                  "flexDirection": "row",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                collapsable={undefined}
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "left": 0,
                    "opacity": 1,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <Text
                  accessibilityTraits="header"
                  accessible={true}
                  allowFontScaling={true}
                  collapsable={undefined}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, .9)",
                      "fontSize": 17,
                      "fontWeight": "700",
                      "marginHorizontal": 16,
                      "textAlign": "center",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Nested navigators throw when trying to pass navigation prop 1`] = `"No \\"routes\\" found in navigation state. Did you try to pass the navigation prop of a React component to a Navigator child? See https://reactnavigation.org/docs/en/custom-navigators.html#navigator-navigation-prop"`;
