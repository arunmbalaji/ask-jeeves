{"version":3,"sources":["init.js"],"names":["DEFAULT_DEPENDENCIES","expo","react","WEB_DEFAULT_DEPENDENCIES","webpack","DEFAULT_DEV_DEPENDENCIES","WEB_DEFAULT_DEV_DEPENDENCIES","arg","process","argv","slice","boolean","module","exports","appPath","appName","verbose","cwd","ownPackageName","require","name","ownPath","join","useYarn","npmOrYarn","npmVersion","sync","stdout","toString","trim","npmVersionParts","split","majorVersion","parseInt","minorVersion","patchVersion","console","log","yellow","exit","readmeExists","rename","appPackagePath","JSON","readFile","appPackage","parse","main","scripts","start","eject","android","ios","test","withWebSupport","web","build","jest","preset","dependencies","devDependencies","writeFile","copy","code","data","appendFile","unlink","command","args","error","cdpath","resolve","cyan","webLogMessage"],"mappings":"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","file":"init.js","sourcesContent":["// @flow\n\nimport chalk from 'chalk';\nimport fse from 'fs-extra';\nimport path from 'path';\nimport pathExists from 'path-exists';\nimport spawn from 'cross-spawn';\nimport minimist from 'minimist';\nimport log from '../util/log';\nimport install from '../util/install';\nimport { hasYarn } from '../util/pm';\n\n// UPDATE DEPENDENCY VERSIONS HERE\nconst DEFAULT_DEPENDENCIES = {\n  expo: '^27.0.1',\n  react: '16.3.1',\n  'react-native': '~0.55.2',\n};\n\nconst WEB_DEFAULT_DEPENDENCIES = {\n  'expo-web': '^0.0.12',\n  'react-dom': '16.0.0',\n  'react-native-web': '^0.4.0',\n  webpack: '^3.11.0',\n  'webpack-dev-server': '2.9.4',\n};\n\n// TODO figure out how this interacts with ejection\nconst DEFAULT_DEV_DEPENDENCIES = {\n  'jest-expo': '~27.0.0',\n  'react-test-renderer': '16.3.1',\n};\n\nconst WEB_DEFAULT_DEV_DEPENDENCIES = {\n  'react-native-scripts': 'latest',\n  'babel-loader': '^7.1.2',\n  'babel-plugin-expo-web': '^0.0.5',\n  'babel-plugin-react-native-web': '^0.4.0',\n  'babel-plugin-transform-decorators-legacy': '^1.3.4',\n  'babel-plugin-transform-imports': '^1.4.1',\n  'babel-plugin-transform-runtime': '^6.23.0',\n  'file-loader': '^1.1.7',\n  'css-loader': '^0.28.7',\n  'style-loader': '^0.19.0',\n};\n\nconst arg = minimist(process.argv.slice(2), {\n  boolean: ['with-web-support'],\n});\n\nmodule.exports = async (appPath: string, appName: string, verbose: boolean, cwd: string = '') => {\n  const ownPackageName: string = require('../../package.json').name;\n  const ownPath: string = path.join(appPath, 'node_modules', ownPackageName);\n  const useYarn: boolean = hasYarn(appPath);\n  const npmOrYarn = useYarn ? 'yarn' : 'npm';\n\n  if (!useYarn) {\n    let npmVersion = spawn.sync('npm', ['--version']).stdout.toString().trim();\n    let npmVersionParts = npmVersion.split('.');\n    let majorVersion = parseInt(npmVersion[0], 10);\n    let minorVersion = parseInt(npmVersion[1], 10);\n    let patchVersion = parseInt(npmVersion[2], 10);\n\n    if (majorVersion === 5 && minorVersion < 7) {\n      console.log(\n        chalk.yellow(\n          `\n*******************************************************************************\nERROR: npm >= 5.0.0 and < 5.7.0 are not supported\n*******************************************************************************\n\nIt looks like you're using a version of npm that is buggy with this tool.\n\nWe recommend using npm >= 5.7.0 or yarn.\n\n*******************************************************************************\n `\n        )\n      );\n      process.exit(1);\n    }\n  }\n\n  const readmeExists: boolean = await pathExists(path.join(appPath, 'README.md'));\n  if (readmeExists) {\n    await fse.rename(path.join(appPath, 'README.md'), path.join(appPath, 'README.old.md'));\n  }\n\n  const appPackagePath: string = path.join(appPath, 'package.json');\n  const appPackage = JSON.parse(await fse.readFile(appPackagePath));\n\n  // mutate the default package.json in any ways we need to\n  appPackage.main = './node_modules/react-native-scripts/build/bin/crna-entry.js';\n  appPackage.scripts = {\n    start: 'react-native-scripts start',\n    eject: 'react-native-scripts eject',\n    android: 'react-native-scripts android',\n    ios: 'react-native-scripts ios',\n    test: 'jest',\n  };\n\n  const withWebSupport = arg['with-web-support'];\n  if (withWebSupport) {\n    appPackage.main = './node_modules/react-native-scripts/build/bin/crna-entry-web.js';\n    Object.assign(appPackage.scripts, {\n      web: 'webpack-dev-server -d --config ./webpack.config.js  --inline --hot --colors --content-base public/ --history-api-fallback',\n      build: 'NODE_ENV=production webpack -p --config ./webpack.config.js',\n    });\n  }\n\n  appPackage.jest = {\n    preset: 'jest-expo',\n  };\n\n  if (!appPackage.dependencies) {\n    appPackage.dependencies = {};\n  }\n\n  if (!appPackage.devDependencies) {\n    appPackage.devDependencies = {};\n  }\n\n  // react-native-scripts is already in the package.json devDependencies\n  // so we need to merge instead of assigning\n  Object.assign(appPackage.dependencies, DEFAULT_DEPENDENCIES);\n  Object.assign(appPackage.devDependencies, DEFAULT_DEV_DEPENDENCIES);\n\n  if (withWebSupport) {\n    Object.assign(appPackage.dependencies, WEB_DEFAULT_DEPENDENCIES);\n    Object.assign(appPackage.devDependencies, WEB_DEFAULT_DEV_DEPENDENCIES);\n  }\n\n  // Write the new appPackage after copying so that we can include any existing\n  await fse.writeFile(appPackagePath, JSON.stringify(appPackage, null, 2));\n\n  // Copy the files for the user\n  await fse.copy(\n    path.join(ownPath, arg['with-web-support'] ? 'template-with-web' : 'template'),\n    appPath\n  );\n\n  // Rename gitignore after the fact to prevent npm from renaming it to .npmignore\n  try {\n    await fse.rename(path.join(appPath, 'gitignore'), path.join(appPath, '.gitignore'));\n  } catch (err) {\n    // Append if there's already a `.gitignore` file there\n    if (err.code === 'EEXIST') {\n      const data = await fse.readFile(path.join(appPath, 'gitignore'));\n      await fse.appendFile(path.join(appPath, '.gitignore'), data);\n      await fse.unlink(path.join(appPath, 'gitignore'));\n    } else {\n      throw err;\n    }\n  }\n  const { code, command, args } = await install(appPath);\n  if (code !== 0) {\n    console.error('Failed to install');\n    // console.error(`\\`${command} ${args.join(' ')}\\` failed`);\n    return;\n  }\n\n  // display the cleanest way to get to the app dir\n  // if the cwd + appName is equal to the full path, then just cd into appName\n  let cdpath;\n  if (path.resolve(cwd, appName) === appPath) {\n    cdpath = appName;\n  } else {\n    cdpath = appPath;\n  }\n\n  log(\n    `\nSuccess! Created ${appName} at ${appPath}\nInside that directory, you can run several commands:\n\n  ${chalk.cyan(npmOrYarn + ' start')}\n    Starts the development server so you can open your app in the Expo\n    app on your phone.\n\n  ${chalk.cyan(npmOrYarn + ' run ios')}\n    (Mac only, requires Xcode)\n    Starts the development server and loads your app in an iOS simulator.\n\n  ${chalk.cyan(npmOrYarn + ' run android')}\n    (Requires Android build tools)\n    Starts the development server and loads your app on a connected Android\n    device or emulator.\n  ${withWebSupport ? webLogMessage(npmOrYarn) : '\\n'}\n  ${chalk.cyan(npmOrYarn + ' test')}\n    Starts the test runner.\n\n  ${chalk.cyan(npmOrYarn + ' run eject')}\n    Removes this tool and copies build dependencies, configuration files\n    and scripts into the app directory. If you do this, you can’t go back!\n\n\nWe suggest that you begin by typing:\n\n  ${chalk.cyan('cd ' + cdpath)}\n  ${chalk.cyan(npmOrYarn + ' start')}`\n  );\n\n  if (readmeExists) {\n    log(\n      `\n${chalk.yellow('You had a `README.md` file, we renamed it to `README.old.md`')}`\n    );\n  }\n\n  log();\n  log('Happy hacking!');\n};\n\nfunction webLogMessage(npmOrYarn) {\n  return `\n  ${chalk.cyan(npmOrYarn + ' web')}\n    Starts the Webpack server to serve the web version of the app.\n  `;\n}\n"]}