{"version":3,"sources":["detach/AndroidShellApp.js"],"names":["async","regex","replace","filename","let","file","await","fs","readFile","fileString","toString","writeFile","regexFileAsync","startRegex","endRegex","lines","split","filteredLines","inDeleteRange","i","length","match","push","join","deleteLinesInFileAsync","androidSrcPath","shellPath","isDetached","_exponentDirectory","exponentDirectory","spawnAsync","pipeToLogger","loggerFields","buildPhase","cwd","path","env","process","JSON_LOGS","initialCopyLogger","logger","withFields","copyToShellApp","fileName","copy","e","warn","copyInitialShellAppFilesAsync","resDirPath","folderPrefix","iconUrl","isLocalUrl","Promise","all","imageKeys","map","key","dirPath","accessSync","constants","F_OK","copyFileSync","saveUrlToPathAsync","copyIconsToResSubfolders","context","fnLogger","shellPathForContext","url","published","manifest","config","releaseChannel","data","privateConfig","fullManifestUrl","versionCode","javaPackage","android","package","Error","name","scheme","detach","bundleUrl","isFullManifest","notificationIconUrl","notification","version","backgroundImages","backgroundImagesForApp","splashBackgroundColor","getSplashScreenBackgroundColor","updatesDisabled","updates","enabled","icon","remove","appBuildGradle","buildGradleFile","readFileSync","androidVersion","shouldShowLoadingView","xmlWeirdAndroidEscape","permissions","content","p","whitelist","forEach","s","includes","identifier","pop","blacklist","filter","writeFileSync","JSON","stringify","globby","absolute","filePath","removeSync","_","image","bundledAssets","downloadAssetsAsync","certificateHash","googleAndroidApiKey","branch","fabric","googleMaps","googleSignIn","apiKey","buildSecret","runShellAppModificationsAsync","build","androidBuildConfiguration","gradleArgs","GRADLE_DAEMON_DISABLED","unshift","spawnAsyncThrowError","keystorePassword","keyPassword","keystore","keyAlias","outputFile","buildShellAppAsync","assets","dest","reduce","res","cur","concat","fileHashes","h","type","ensureDir","batches","chunk","batch","asset","extensionIndex","lastIndexOf","prefixLength","hash","substring","getManifestAsync","TURTLE_WORKING_DIR_PATH","EXPO_UNIVERSE_DIR","original","noAmps","replaceString","noLt","noGt","noApos","exports","updateAndroidShellAppAsync","args","sdkVersion","androidPackage","privateConfigFile","alias","getRemoteOrLocalUrl","get","basePath","splash","acc","imageKey","backgroundColor","resizeMode","createAndroidShellAppAsync","configuration","privateConfigContents","parse","buildFlags","StandaloneBuildFlags","createAndroid","StandaloneContext","createServiceContext","skipBuild","projectPath"],"mappings":"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","file":"../../detach/AndroidShellApp.js","sourcesContent":["// Copyright 2015-present 650 Industries. All rights reserved.\n/**\n * @flow\n */\n\n'use strict';\n\nimport fs from 'fs-extra';\nimport path from 'path';\nimport JsonFile from '@expo/json-file';\nimport replaceString from 'replace-string';\nimport _ from 'lodash';\nimport globby from 'globby';\n\nimport * as ExponentTools from './ExponentTools';\nimport StandaloneBuildFlags from './StandaloneBuildFlags';\nimport StandaloneContext from './StandaloneContext';\nimport logger from './Logger';\n\nconst { getManifestAsync, saveUrlToPathAsync, spawnAsyncThrowError, spawnAsync } = ExponentTools;\n\nconst imageKeys = ['ldpi', 'mdpi', 'hdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi'];\n\n// Do not call this from anything used by detach\nfunction exponentDirectory() {\n  if (process.env.TURTLE_WORKING_DIR_PATH) {\n    return process.env.TURTLE_WORKING_DIR_PATH;\n  } else if (process.env.EXPO_UNIVERSE_DIR) {\n    return path.join(process.env.EXPO_UNIVERSE_DIR, 'exponent');\n  } else {\n    return null;\n  }\n}\n\nasync function regexFileAsync(regex, replace, filename) {\n  let file = await fs.readFile(filename);\n  let fileString = file.toString();\n  await fs.writeFile(filename, fileString.replace(regex, replace));\n}\n\n// Matches sed /d behavior\nasync function deleteLinesInFileAsync(startRegex, endRegex, filename) {\n  let file = await fs.readFile(filename);\n  let fileString = file.toString();\n  let lines = fileString.split(/\\r?\\n/);\n  let filteredLines = [];\n  let inDeleteRange = false;\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].match(startRegex)) {\n      inDeleteRange = true;\n    }\n\n    if (!inDeleteRange) {\n      filteredLines.push(lines[i]);\n    }\n\n    if (inDeleteRange && lines[i].match(endRegex)) {\n      inDeleteRange = false;\n    }\n  }\n  await fs.writeFile(filename, filteredLines.join('\\n'));\n}\n\nfunction xmlWeirdAndroidEscape(original) {\n  let noAmps = replaceString(original, '&', '&amp;');\n  let noLt = replaceString(noAmps, '<', '&lt;');\n  let noGt = replaceString(noLt, '>', '&gt;');\n  let noApos = replaceString(noGt, '\"', '\\\\\"');\n  return replaceString(noApos, \"'\", \"\\\\'\");\n}\n\nexports.updateAndroidShellAppAsync = async function updateAndroidShellAppAsync(args: any) {\n  let {\n    url,\n    sdkVersion,\n    androidPackage,\n    privateConfigFile,\n    keystore,\n    alias,\n    keystorePassword,\n    keyPassword,\n    releaseChannel,\n    outputFile,\n  } = args;\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest = await getManifestAsync(url, {\n    'Exponent-SDK-Version': sdkVersion,\n    'Exponent-Platform': 'android',\n    'Expo-Release-Channel': releaseChannel,\n  });\n\n  let fullManifestUrl = `${url.replace('exp://', 'https://')}/index.exp`;\n  let bundleUrl = manifest.bundleUrl;\n\n  let shellPath = path.join(exponentDirectory(), 'android-shell-app');\n\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'));\n  await fs.writeFileSync(\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n    JSON.stringify(manifest)\n  );\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle'));\n  await saveUrlToPathAsync(\n    bundleUrl,\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n  );\n\n  await deleteLinesInFileAsync(\n    `START\\ EMBEDDED\\ RESPONSES`,\n    `END\\ EMBEDDED\\ RESPONSES`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  await regexFileAsync(\n    '// ADD EMBEDDED RESPONSES HERE',\n    `\n    // ADD EMBEDDED RESPONSES HERE\n    // START EMBEDDED RESPONSES\n    embeddedResponses.add(new Constants.EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n    embeddedResponses.add(new Constants.EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));\n    // END EMBEDDED RESPONSES`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n};\n\nfunction getRemoteOrLocalUrl(manifest, key, isDetached) {\n  // in detached apps, `manifest` is actually just app.json, so there are no remote url fields\n  // we should return a local url starting with file:// instead\n  if (isDetached) {\n    return _.get(manifest, key);\n  }\n  return _.get(manifest, `${key}Url`);\n}\n\nfunction backgroundImagesForApp(shellPath, manifest, isDetached) {\n  // returns an array like:\n  // [\n  //   {url: 'urlToDownload', path: 'pathToSaveTo'},\n  //   {url: 'anotherURlToDownload', path: 'anotherPathToSaveTo'},\n  // ]\n  let basePath = path.join(shellPath, 'app', 'src', 'main', 'res');\n  if (_.get(manifest, 'android.splash')) {\n    var splash = _.get(manifest, 'android.splash');\n    return _.reduce(\n      imageKeys,\n      function(acc, imageKey) {\n        let url = getRemoteOrLocalUrl(splash, imageKey, isDetached);\n        if (url) {\n          acc.push({\n            url,\n            path: path.join(basePath, `drawable-${imageKey}`, 'shell_launch_background_image.png'),\n          });\n        }\n\n        return acc;\n      },\n      []\n    );\n  }\n\n  let url = getRemoteOrLocalUrl(manifest, 'splash.image', isDetached);\n  if (url) {\n    return [\n      {\n        url,\n        path: path.join(basePath, 'drawable-xxxhdpi', 'shell_launch_background_image.png'),\n      },\n    ];\n  }\n\n  return [];\n}\n\nfunction getSplashScreenBackgroundColor(manifest) {\n  let backgroundColor;\n  if (manifest.android && manifest.android.splash && manifest.android.splash.backgroundColor) {\n    backgroundColor = manifest.android.splash.backgroundColor;\n  } else if (manifest.splash && manifest.splash.backgroundColor) {\n    backgroundColor = manifest.splash.backgroundColor;\n  }\n\n  // Default to white\n  if (!backgroundColor) {\n    backgroundColor = '#FFFFFF';\n  }\n  return backgroundColor;\n}\n\n/*\n  if resizeMode is 'cover' we should show LoadingView:\n  using an ImageView, unlike having a BitmapDrawable\n  provides a fullscreen image without distortions\n*/\nfunction shouldShowLoadingView(manifest) {\n  return (\n    (manifest.android &&\n      manifest.android.splash &&\n      manifest.android.splash.resizeMode &&\n      manifest.android.splash.resizeMode === 'cover') ||\n    (manifest.splash && manifest.splash.resizeMode && manifest.splash.resizeMode === 'cover')\n  );\n}\n\nexport async function copyInitialShellAppFilesAsync(\n  androidSrcPath,\n  shellPath,\n  isDetached: boolean = false\n) {\n  const _exponentDirectory = exponentDirectory();\n  if (_exponentDirectory) {\n    await spawnAsync(`../../tools-public/generate-dynamic-macros-android.sh`, [], {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'generating dynamic macros' },\n      cwd: path.join(_exponentDirectory, 'android', 'app'),\n      env: {\n        ...process.env,\n        JSON_LOGS: '0',\n      },\n    }); // populate android template files now since we take out the prebuild step later on\n  }\n\n  const initialCopyLogger = logger.withFields({ buildPhase: 'copying initial shell app files' });\n\n  const copyToShellApp = async fileName => {\n    try {\n      await fs.copy(path.join(androidSrcPath, fileName), path.join(shellPath, fileName));\n    } catch (e) {\n      // android.iml is only available locally, not on the builders, so don't crash when this happens\n      initialCopyLogger.warn(`Warning: Could not copy ${fileName} to shell app directory.`);\n    }\n  };\n\n  if (!isDetached) {\n    await copyToShellApp('expoview');\n    await copyToShellApp('ReactCommon');\n    await copyToShellApp('ReactAndroid');\n  }\n\n  await copyToShellApp('android.iml');\n  await copyToShellApp('app');\n  await copyToShellApp('build.gradle');\n  await copyToShellApp('gradle');\n  await copyToShellApp('gradle.properties');\n  await copyToShellApp('gradlew');\n  await copyToShellApp('settings.gradle');\n  await copyToShellApp('maven');\n  await copyToShellApp('debug.keystore');\n  await copyToShellApp('run.sh');\n  await copyToShellApp('detach-scripts');\n}\n\nexports.createAndroidShellAppAsync = async function createAndroidShellAppAsync(args: any) {\n  let {\n    url,\n    sdkVersion,\n    releaseChannel,\n    privateConfigFile,\n    configuration,\n    keystore,\n    alias,\n    keystorePassword,\n    keyPassword,\n    outputFile,\n  } = args;\n\n  let androidSrcPath = path.join(exponentDirectory(), 'android');\n  let shellPath = path.join(exponentDirectory(), 'android-shell-app');\n\n  await fs.remove(shellPath);\n  await fs.ensureDir(shellPath);\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest = await getManifestAsync(url, {\n    'Exponent-SDK-Version': sdkVersion,\n    'Exponent-Platform': 'android',\n    'Expo-Release-Channel': releaseChannel,\n  });\n  configuration = configuration ? configuration : 'Release';\n\n  let privateConfig;\n  if (privateConfigFile) {\n    let privateConfigContents = await fs.readFile(privateConfigFile, 'utf8');\n    privateConfig = JSON.parse(privateConfigContents);\n  }\n\n  let androidBuildConfiguration;\n  if (keystore && alias && keystorePassword && keyPassword) {\n    androidBuildConfiguration = {\n      keystore,\n      keystorePassword,\n      keyAlias: alias,\n      keyPassword,\n      outputFile,\n    };\n  }\n\n  let buildFlags = StandaloneBuildFlags.createAndroid(configuration, androidBuildConfiguration);\n  let context = StandaloneContext.createServiceContext(\n    androidSrcPath,\n    null,\n    manifest,\n    privateConfig,\n    /* testEnvironment */ 'none',\n    buildFlags,\n    url,\n    releaseChannel\n  );\n\n  await copyInitialShellAppFilesAsync(androidSrcPath, shellPath);\n  await runShellAppModificationsAsync(context);\n\n  if (!args.skipBuild) {\n    await buildShellAppAsync(context);\n  }\n};\n\nfunction shellPathForContext(context: StandaloneContext) {\n  if (context.type === 'user') {\n    return path.join(context.data.projectPath, 'android');\n  } else {\n    return path.join(exponentDirectory(), 'android-shell-app');\n  }\n}\n\nasync function copyIconsToResSubfolders(resDirPath, folderPrefix, fileName, iconUrl, isLocalUrl) {\n  return Promise.all(\n    imageKeys.map(async key => {\n      try {\n        const dirPath = path.join(resDirPath, `${folderPrefix}-${key}`);\n        fs.accessSync(dirPath, fs.constants.F_OK);\n        if (isLocalUrl) {\n          return fs.copyFileSync(iconUrl, path.join(dirPath, fileName));\n        }\n        return await saveUrlToPathAsync(iconUrl, path.join(dirPath, fileName));\n      } catch (e) {\n        // directory does not exist, so ignore\n      }\n    })\n  );\n}\n\nexport async function runShellAppModificationsAsync(\n  context: StandaloneContext,\n  isDetached: boolean = false\n) {\n  const fnLogger = logger.withFields({ buildPhase: 'running shell app modifications' });\n\n  let shellPath = shellPathForContext(context);\n  let url: string = context.published.url;\n  let manifest = context.config; // manifest or app.json\n  let releaseChannel = context.published.releaseChannel;\n\n  if (!context.data.privateConfig) {\n    fnLogger.warn('Warning: No config file specified.');\n  }\n\n  let fullManifestUrl = `${url.replace('exp://', 'https://')}/index.exp`;\n\n  let versionCode = 1;\n  let javaPackage = manifest.android.package;\n  if (manifest.android.versionCode) {\n    versionCode = manifest.android.versionCode;\n  }\n\n  if (!javaPackage) {\n    throw new Error(\n      'Must specify androidPackage option (either from manifest or on command line).'\n    );\n  }\n\n  let name = manifest.name;\n  let iconUrl =\n    manifest.android && manifest.android.iconUrl ? manifest.android.iconUrl : manifest.iconUrl;\n  let scheme = manifest.scheme || (manifest.detach && manifest.detach.scheme);\n  let bundleUrl: ?string = manifest.bundleUrl;\n  let isFullManifest = !!bundleUrl;\n  let notificationIconUrl = manifest.notification ? manifest.notification.iconUrl : null;\n  let version = manifest.version ? manifest.version : '0.0.0';\n  let backgroundImages = backgroundImagesForApp(shellPath, manifest, isDetached);\n  let splashBackgroundColor = getSplashScreenBackgroundColor(manifest);\n  let updatesDisabled = manifest.updates && manifest.updates.enabled === false;\n\n  if (isDetached) {\n    // manifest is actually just app.json in this case, so iconUrl fields don't exist\n    iconUrl = manifest.android && manifest.android.icon ? manifest.android.icon : manifest.icon;\n    notificationIconUrl = manifest.notification ? manifest.notification.icon : null;\n  }\n\n  // Clean build directories\n  await fs.remove(path.join(shellPath, 'app', 'build'));\n  await fs.remove(path.join(shellPath, 'ReactAndroid', 'build'));\n  await fs.remove(path.join(shellPath, 'expoview', 'build'));\n  await fs.remove(path.join(shellPath, 'app', 'src', 'androidTest'));\n\n  if (isDetached) {\n    let appBuildGradle = path.join(shellPath, 'app', 'build.gradle');\n    await regexFileAsync(/\\/\\* UNCOMMENT WHEN DISTRIBUTING/g, '', appBuildGradle);\n    await regexFileAsync(/END UNCOMMENT WHEN DISTRIBUTING \\*\\//g, '', appBuildGradle);\n    await regexFileAsync(`compile project(path: ':expoview')`, '', appBuildGradle);\n\n    // Don't need to compile expoview or ReactAndroid\n    // react-native link looks for a \\n so we need that. See https://github.com/facebook/react-native/blob/master/local-cli/link/android/patches/makeSettingsPatch.js\n    await fs.writeFile(path.join(shellPath, 'settings.gradle'), `include ':app'\\n`);\n\n    await regexFileAsync(\n      'TEMPLATE_INITIAL_URL',\n      url,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'MainActivity.java'\n      )\n    );\n  }\n\n  // Package\n  await regexFileAsync(\n    `applicationId 'host.exp.exponent'`,\n    `applicationId '${javaPackage}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    `android:name=\"host.exp.exponent\"`,\n    `android:name=\"${javaPackage}\"`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Versions\n  let buildGradleFile = await fs.readFileSync(path.join(shellPath, 'app', 'build.gradle'), 'utf8');\n  let androidVersion = buildGradleFile.match(/versionName '(\\S+)'/)[1];\n  await regexFileAsync(\n    'VERSION_NAME = null',\n    `VERSION_NAME = \"${androidVersion}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n  await deleteLinesInFileAsync(\n    `BEGIN\\ VERSIONS`,\n    `END\\ VERSIONS`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    '// ADD VERSIONS HERE',\n    `versionCode ${versionCode}\n    versionName '${version}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // Remove Exponent build script\n  if (!isDetached) {\n    await regexFileAsync(\n      `preBuild.dependsOn generateDynamicMacros`,\n      ``,\n      path.join(shellPath, 'expoview', 'build.gradle')\n    );\n  }\n\n  // change javaMaxHeapSize\n  await regexFileAsync(\n    `javaMaxHeapSize \"8g\"`,\n    `javaMaxHeapSize \"6g\"`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // Push notifications\n  await regexFileAsync(\n    '\"package_name\": \"host.exp.exponent\"',\n    `\"package_name\": \"${javaPackage}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  ); // TODO: actually use the correct file\n\n  // TODO: probably don't need this in both places\n  await regexFileAsync(\n    /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n    `${javaPackage}.permission.C2D_MESSAGE`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n  if (!isDetached) {\n    await regexFileAsync(\n      /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n      `${javaPackage}.permission.C2D_MESSAGE`,\n      path.join(shellPath, 'expoview', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Set INITIAL_URL, SHELL_APP_SCHEME and SHOW_LOADING_VIEW\n  await regexFileAsync(\n    'INITIAL_URL = null',\n    `INITIAL_URL = \"${url}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n  if (scheme) {\n    await regexFileAsync(\n      'SHELL_APP_SCHEME = null',\n      `SHELL_APP_SCHEME = \"${scheme}\"`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  if (shouldShowLoadingView(manifest)) {\n    await regexFileAsync(\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = false',\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = true',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  if (isDetached) {\n    await regexFileAsync(\n      'IS_DETACHED = false',\n      `IS_DETACHED = true`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  if (updatesDisabled) {\n    await regexFileAsync(\n      'ARE_REMOTE_UPDATES_ENABLED = true',\n      'ARE_REMOTE_UPDATES_ENABLED = false',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  // App name\n  await regexFileAsync(\n    '\"app_name\">Expo',\n    `\"app_name\">${xmlWeirdAndroidEscape(name)}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'strings.xml')\n  );\n\n  // Splash Screen background color\n  await regexFileAsync(\n    '\"splashBackground\">#FFFFFF',\n    `\"splashBackground\">${splashBackgroundColor}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'colors.xml')\n  );\n\n  // show only background color if LoadingView will appear\n  if (shouldShowLoadingView(manifest)) {\n    await regexFileAsync(\n      /<item>.*<\\/item>/,\n      '',\n      path.join(shellPath, 'app', 'src', 'main', 'res', 'drawable', 'splash_background.xml')\n    );\n  }\n\n  // Remove exp:// scheme from LauncherActivity\n  await deleteLinesInFileAsync(\n    `START\\ LAUNCHER\\ INTENT\\ FILTERS`,\n    `END\\ LAUNCHER\\ INTENT\\ FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Remove LAUNCHER category from HomeActivity\n  await deleteLinesInFileAsync(\n    `START\\ HOME\\ INTENT\\ FILTERS`,\n    `END\\ HOME\\ INTENT\\ FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  if (isDetached) {\n    // Add LAUNCHER category to MainActivity\n    await regexFileAsync(\n      '<!-- ADD DETACH INTENT FILTERS HERE -->',\n      `<intent-filter>\n        <action android:name=\"android.intent.action.MAIN\"/>\n\n        <category android:name=\"android.intent.category.LAUNCHER\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  } else {\n    // Add LAUNCHER category to ShellAppActivity\n    await regexFileAsync(\n      '<!-- ADD SHELL INTENT FILTERS HERE -->',\n      `<intent-filter>\n        <action android:name=\"android.intent.action.MAIN\"/>\n\n        <category android:name=\"android.intent.category.LAUNCHER\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Add shell app scheme\n  if (scheme) {\n    await regexFileAsync(\n      '<!-- ADD SHELL SCHEME HERE -->',\n      `<intent-filter>\n        <data android:scheme=\"${scheme}\"/>\n\n        <action android:name=\"android.intent.action.VIEW\"/>\n\n        <category android:name=\"android.intent.category.DEFAULT\"/>\n        <category android:name=\"android.intent.category.BROWSABLE\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Add permissions\n  if (manifest.android && manifest.android.permissions) {\n    const content = await fs.readFileSync(\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml'),\n      'utf-8'\n    );\n\n    // Get the list of optional permissions form manifest\n    const permissions = content\n      .replace(\n        /(([\\s\\S]*<!-- BEGIN OPTIONAL PERMISSIONS -->)|(<!-- END OPTIONAL PERMISSIONS -->[\\s\\S]*))/g,\n        ''\n      )\n      .match(/android:name=\".+\"/g)\n      .map(p => p.replace(/(android:name=|\")/g, ''));\n\n    const whitelist = [];\n\n    manifest.android.permissions.forEach(s => {\n      if (s.includes('.')) {\n        whitelist.push(s);\n      } else {\n        permissions.forEach(identifier => {\n          if (identifier.split('.').pop() === s) {\n            whitelist.push(identifier);\n          }\n        });\n      }\n    });\n\n    // Permissions we need to remove from the generated manifest\n    const blacklist = [\n      'android.permission.ACCESS_COARSE_LOCATION',\n      'android.permission.ACCESS_FINE_LOCATION',\n      'android.permission.CAMERA',\n      'android.permission.MANAGE_DOCUMENTS',\n      'android.permission.READ_CONTACTS',\n      'android.permission.READ_CALENDAR',\n      'android.permission.WRITE_CALENDAR',\n      'android.permission.READ_EXTERNAL_STORAGE',\n      'android.permission.READ_INTERNAL_STORAGE',\n      'android.permission.READ_PHONE_STATE',\n      'android.permission.RECORD_AUDIO',\n      'android.permission.USE_FINGERPRINT',\n      'android.permission.VIBRATE',\n      'android.permission.WRITE_EXTERNAL_STORAGE',\n      'com.anddoes.launcher.permission.UPDATE_COUNT',\n      'com.android.launcher.permission.INSTALL_SHORTCUT',\n      'com.google.android.gms.permission.ACTIVITY_RECOGNITION',\n      'com.google.android.providers.gsf.permission.READ_GSERVICES',\n      'com.htc.launcher.permission.READ_SETTINGS',\n      'com.htc.launcher.permission.UPDATE_SHORTCUT',\n      'com.majeur.launcher.permission.UPDATE_BADGE',\n      'com.sec.android.provider.badge.permission.READ',\n      'com.sec.android.provider.badge.permission.WRITE',\n      'com.sonyericsson.home.permission.BROADCAST_BADGE',\n    ].filter(p => !whitelist.includes(p));\n\n    await deleteLinesInFileAsync(\n      `BEGIN\\ OPTIONAL\\ PERMISSIONS`,\n      `END\\ OPTIONAL\\ PERMISSIONS`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n\n    await regexFileAsync(\n      '<!-- ADD PERMISSIONS HERE -->',\n      `\n      ${whitelist.map(p => `<uses-permission android:name=\"${p}\" />`).join('\\n')}\n      ${blacklist\n        .map(p => `<uses-permission android:name=\"${p}\" tools:node=\"remove\" />`)\n        .join('\\n')}\n      `,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // OAuth redirect scheme\n  await regexFileAsync(\n    '<data android:scheme=\"host.exp.exponent\" android:path=\"oauthredirect\"/>',\n    `<data android:scheme=\"${javaPackage}\" android:path=\"oauthredirect\"/>`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Embed manifest and bundle\n  if (isFullManifest) {\n    await fs.writeFileSync(\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n      JSON.stringify(manifest)\n    );\n    await saveUrlToPathAsync(\n      bundleUrl,\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n    );\n\n    await regexFileAsync(\n      '// START EMBEDDED RESPONSES',\n      `\n      // START EMBEDDED RESPONSES\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  // Icon\n  if (iconUrl) {\n    (await globby(['**/ic_launcher.png'], {\n      cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n      absolute: true,\n    })).forEach(filePath => {\n      fs.removeSync(filePath);\n    });\n\n    await copyIconsToResSubfolders(\n      path.join(shellPath, 'app', 'src', 'main', 'res'),\n      'mipmap',\n      'ic_launcher.png',\n      iconUrl,\n      isDetached\n    );\n  }\n\n  if (notificationIconUrl) {\n    (await globby(['**/shell_notification_icon.png'], {\n      cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n      absolute: true,\n    })).forEach(filePath => {\n      fs.removeSync(filePath);\n    });\n\n    await copyIconsToResSubfolders(\n      path.join(shellPath, 'app', 'src', 'main', 'res'),\n      'drawable',\n      'shell_notification_icon.png',\n      notificationIconUrl,\n      isDetached\n    );\n  }\n\n  // Splash Background\n  if (backgroundImages && backgroundImages.length > 0) {\n    // Delete the placeholder images\n    (await globby(['**/shell_launch_background_image.png'], {\n      cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n      absolute: true,\n    })).forEach(filePath => {\n      fs.removeSync(filePath);\n    });\n\n    _.forEach(backgroundImages, async image => {\n      if (isDetached) {\n        // local file so just copy it\n        fs.copyFileSync(image.url, image.path);\n      } else {\n        await saveUrlToPathAsync(image.url, image.path);\n      }\n    });\n  }\n\n  if (manifest.bundledAssets) {\n    await downloadAssetsAsync(manifest.bundledAssets, `${shellPath}/app/src/main/assets`);\n  }\n\n  let certificateHash = '';\n  let googleAndroidApiKey = '';\n  let privateConfig = context.data.privateConfig;\n  if (privateConfig) {\n    let branch = privateConfig.branch;\n    let fabric = privateConfig.fabric;\n    let googleMaps = privateConfig.googleMaps;\n    let googleSignIn = privateConfig.googleSignIn;\n\n    // Branch\n    if (branch) {\n      await regexFileAsync(\n        '<!-- ADD BRANCH CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.branch.sdk.BranchKey\"\n      android:value=\"${branch.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Fabric\n    if (fabric) {\n      await fs.remove(path.join(shellPath, 'app', 'fabric.properties'));\n      await fs.writeFileSync(\n        path.join(shellPath, 'app', 'fabric.properties'),\n        `apiSecret=${fabric.buildSecret}\\n`\n      );\n\n      await deleteLinesInFileAsync(\n        `BEGIN\\ FABRIC\\ CONFIG`,\n        `END\\ FABRIC\\ CONFIG`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n      await regexFileAsync(\n        '<!-- ADD FABRIC CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.fabric.ApiKey\"\n      android:value=\"${fabric.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Maps\n    if (googleMaps) {\n      await deleteLinesInFileAsync(\n        `BEGIN\\ GOOGLE\\ MAPS\\ CONFIG`,\n        `END\\ GOOGLE\\ MAPS\\ CONFIG`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n      await regexFileAsync(\n        '<!-- ADD GOOGLE MAPS CONFIG HERE -->',\n        `<meta-data\n      android:name=\"com.google.android.geo.API_KEY\"\n      android:value=\"${googleMaps.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Login\n    if (googleSignIn) {\n      certificateHash = googleSignIn.certificateHash;\n      googleAndroidApiKey = googleSignIn.apiKey;\n    }\n  }\n\n  // Google sign in\n  await regexFileAsync(\n    /\"current_key\": \"(.*?)\"/,\n    `\"current_key\": \"${googleAndroidApiKey}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  );\n  await regexFileAsync(\n    /\"certificate_hash\": \"(.*?)\"/,\n    `\"certificate_hash\": \"${certificateHash}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  );\n}\n\nasync function buildShellAppAsync(context: StandaloneContext) {\n  let shellPath = shellPathForContext(context);\n\n  if (context.build.android) {\n    let androidBuildConfiguration = context.build.android;\n\n    try {\n      await fs.remove(`shell-unaligned.apk`);\n      await fs.remove(`shell.apk`);\n    } catch (e) {}\n    const gradleArgs = [`assembleProdRelease`];\n    if (process.env.GRADLE_DAEMON_DISABLED) {\n      gradleArgs.unshift('--no-daemon');\n    }\n    await spawnAsyncThrowError(`./gradlew`, gradleArgs, {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'running gradle' },\n      cwd: shellPath,\n    });\n    await fs.copy(\n      path.join(shellPath, 'app', 'build', 'outputs', 'apk', 'app-prod-release-unsigned.apk'),\n      `shell-unaligned.apk`\n    );\n    await spawnAsync(\n      `jarsigner`,\n      [\n        '-verbose',\n        '-sigalg',\n        'SHA1withRSA',\n        '-digestalg',\n        'SHA1',\n        '-storepass',\n        androidBuildConfiguration.keystorePassword,\n        '-keypass',\n        androidBuildConfiguration.keyPassword,\n        '-keystore',\n        androidBuildConfiguration.keystore,\n        'shell-unaligned.apk',\n        androidBuildConfiguration.keyAlias,\n      ],\n      {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'signing created apk' },\n      }\n    );\n    await spawnAsync(`zipalign`, ['-v', '4', 'shell-unaligned.apk', 'shell.apk'], {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'verifying apk alignment' },\n    });\n    try {\n      await fs.remove('shell-unaligned.apk');\n    } catch (e) {}\n    await spawnAsync(\n      `jarsigner`,\n      [\n        '-verify',\n        '-verbose',\n        '-certs',\n        '-keystore',\n        androidBuildConfiguration.keystore,\n        'shell.apk',\n      ],\n      {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'verifying apk' },\n      }\n    );\n    await fs.copy('shell.apk', androidBuildConfiguration.outputFile || '/tmp/shell-signed.apk');\n  } else {\n    try {\n      await fs.remove('shell-debug.apk');\n    } catch (e) {}\n    await spawnAsyncThrowError(`./gradlew`, ['assembleDevRemoteKernelDebug'], {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'running gradle' },\n      cwd: shellPath,\n    });\n    await fs.copy(\n      path.join(shellPath, 'app', 'build', 'outputs', 'apk', 'app-devRemoteKernel-debug.apk'),\n      `/tmp/shell-debug.apk`\n    );\n  }\n}\n\nasync function downloadAssetsAsync(assets, dest) {\n  // Compat with exp 46.x.x, can remove when this version is phasing out.\n  if (typeof assets[0] === 'object') {\n    assets = assets.reduce(\n      (res, cur) =>\n        res.concat(cur.fileHashes.map(h => 'asset_' + h + (cur.type ? '.' + cur.type : ''))),\n      []\n    );\n  }\n\n  await fs.ensureDir(dest);\n  const batches = _.chunk(assets, 5);\n  for (const batch of batches) {\n    await Promise.all(\n      batch.map(async asset => {\n        const extensionIndex = asset.lastIndexOf('.');\n        const prefixLength = 'asset_'.length;\n        const hash =\n          extensionIndex >= 0\n            ? asset.substring(prefixLength, extensionIndex)\n            : asset.substring(prefixLength);\n        await saveUrlToPathAsync(\n          'https://d1wp6m56sqw74a.cloudfront.net/~assets/' + hash,\n          path.join(dest, asset)\n        );\n      })\n    );\n  }\n}\n"],"sourceRoot":"/xdl/src"}