{"version":3,"file":"bundle.umd.js","sources":["../src/graphql.ts","../src/utilities.ts"],"sourcesContent":["import {\n  DocumentNode,\n  SelectionSetNode,\n  FieldNode,\n  FragmentDefinitionNode,\n  InlineFragmentNode,\n} from 'graphql';\n\nimport {\n  getMainDefinition,\n  getFragmentDefinitions,\n  createFragmentMap,\n  FragmentMap,\n  DirectiveInfo,\n  shouldInclude,\n  getDirectiveInfoFromField,\n  isField,\n  isInlineFragment,\n  resultKeyNameFromField,\n  argumentsObjectFromField,\n} from 'apollo-utilities';\n\nexport type Resolver = (\n  fieldName: string,\n  rootValue: any,\n  args: any,\n  context: any,\n  info: ExecInfo,\n) => any;\n\nexport type VariableMap = { [name: string]: any };\n\nexport type ResultMapper = (\n  values: { [fieldName: string]: any },\n  rootValue: any,\n) => any;\nexport type FragmentMatcher = (\n  rootValue: any,\n  typeCondition: string,\n  context: any,\n) => boolean;\n\nexport type ExecContext = {\n  fragmentMap: FragmentMap;\n  contextValue: any;\n  variableValues: VariableMap;\n  resultMapper: ResultMapper;\n  resolver: Resolver;\n  fragmentMatcher: FragmentMatcher;\n};\n\nexport type ExecInfo = {\n  isLeaf: boolean;\n  resultKey: string;\n  directives: DirectiveInfo;\n};\n\nexport type ExecOptions = {\n  resultMapper?: ResultMapper;\n  fragmentMatcher?: FragmentMatcher;\n};\n\n/* Based on graphql function from graphql-js:\n *\n * graphql(\n *   schema: GraphQLSchema,\n *   requestString: string,\n *   rootValue?: ?any,\n *   contextValue?: ?any,\n *   variableValues?: ?{[key: string]: any},\n *   operationName?: ?string\n * ): Promise<GraphQLResult>\n *\n * The default export as of graphql-anywhere is sync as of 4.0,\n * but below is an exported alternative that is async.\n * In the 5.0 version, this will be the only export again\n * and it will be async\n */\nexport function graphql(\n  resolver: Resolver,\n  document: DocumentNode,\n  rootValue?: any,\n  contextValue?: any,\n  variableValues?: VariableMap,\n  execOptions: ExecOptions = {},\n) {\n  const mainDefinition = getMainDefinition(document);\n\n  const fragments = getFragmentDefinitions(document);\n  const fragmentMap = createFragmentMap(fragments);\n\n  const resultMapper = execOptions.resultMapper;\n\n  // Default matcher always matches all fragments\n  const fragmentMatcher = execOptions.fragmentMatcher || (() => true);\n\n  const execContext: ExecContext = {\n    fragmentMap,\n    contextValue,\n    variableValues,\n    resultMapper,\n    resolver,\n    fragmentMatcher,\n  };\n\n  return executeSelectionSet(\n    mainDefinition.selectionSet,\n    rootValue,\n    execContext,\n  );\n}\n\nfunction executeSelectionSet(\n  selectionSet: SelectionSetNode,\n  rootValue: any,\n  execContext: ExecContext,\n) {\n  const { fragmentMap, contextValue, variableValues: variables } = execContext;\n\n  const result = {};\n\n  selectionSet.selections.forEach(selection => {\n    if (!shouldInclude(selection, variables)) {\n      // Skip this entirely\n      return;\n    }\n\n    if (isField(selection)) {\n      const fieldResult = executeField(selection, rootValue, execContext);\n\n      const resultFieldKey = resultKeyNameFromField(selection);\n\n      if (fieldResult !== undefined) {\n        if (result[resultFieldKey] === undefined) {\n          result[resultFieldKey] = fieldResult;\n        } else {\n          merge(result[resultFieldKey], fieldResult);\n        }\n      }\n    } else {\n      let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n      if (isInlineFragment(selection)) {\n        fragment = selection;\n      } else {\n        // This is a named fragment\n        fragment = fragmentMap[selection.name.value];\n\n        if (!fragment) {\n          throw new Error(`No fragment named ${selection.name.value}`);\n        }\n      }\n\n      const typeCondition = fragment.typeCondition.name.value;\n\n      if (execContext.fragmentMatcher(rootValue, typeCondition, contextValue)) {\n        const fragmentResult = executeSelectionSet(\n          fragment.selectionSet,\n          rootValue,\n          execContext,\n        );\n\n        merge(result, fragmentResult);\n      }\n    }\n  });\n\n  if (execContext.resultMapper) {\n    return execContext.resultMapper(result, rootValue);\n  }\n\n  return result;\n}\n\nfunction executeField(\n  field: FieldNode,\n  rootValue: any,\n  execContext: ExecContext,\n): any {\n  const { variableValues: variables, contextValue, resolver } = execContext;\n\n  const fieldName = field.name.value;\n  const args = argumentsObjectFromField(field, variables);\n\n  const info: ExecInfo = {\n    isLeaf: !field.selectionSet,\n    resultKey: resultKeyNameFromField(field),\n    directives: getDirectiveInfoFromField(field, variables),\n  };\n\n  const result = resolver(fieldName, rootValue, args, contextValue, info);\n\n  // Handle all scalar types here\n  if (!field.selectionSet) {\n    return result;\n  }\n\n  // From here down, the field has a selection set, which means it's trying to\n  // query a GraphQLObjectType\n  if (result == null) {\n    // Basically any field in a GraphQL response can be null, or missing\n    return result;\n  }\n\n  if (Array.isArray(result)) {\n    return executeSubSelectedArray(field, result, execContext);\n  }\n\n  // Returned value is an object, and the query has a sub-selection. Recurse.\n  return executeSelectionSet(field.selectionSet, result, execContext);\n}\n\nfunction executeSubSelectedArray(field, result, execContext) {\n  return result.map(item => {\n    // null value in array\n    if (item === null) {\n      return null;\n    }\n\n    // This is a nested array, recurse\n    if (Array.isArray(item)) {\n      return executeSubSelectedArray(field, item, execContext);\n    }\n\n    // This is an object, run the selection set on it\n    return executeSelectionSet(field.selectionSet, item, execContext);\n  });\n}\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nexport function merge(dest, src) {\n  if (src !== null && typeof src === 'object') {\n    Object.keys(src).forEach(key => {\n      const srcVal = src[key];\n      if (!hasOwn.call(dest, key)) {\n        dest[key] = srcVal;\n      } else {\n        merge(dest[key], srcVal);\n      }\n    });\n  }\n}\n","import { DocumentNode } from 'graphql';\n\nimport { graphql } from './graphql';\n\nexport function filter(doc: DocumentNode, data: any): any {\n  const resolver = (\n    fieldName: string,\n    root: any,\n    args: any,\n    context: any,\n    info: any,\n  ) => {\n    return root[info.resultKey];\n  };\n\n  return Array.isArray(data)\n    ? data.map(dataObj => graphql(resolver, doc, dataObj))\n    : graphql(resolver, doc, data);\n}\n\n// TODO: we should probably make check call propType and then throw,\n// rather than the other way round, to avoid constructing stack traces\n// for things like oneOf uses in React. At this stage I doubt many people\n// are using this like that, but in the future, who knows?\nexport function check(doc: DocumentNode, data: any): void {\n  const resolver = (\n    fieldName: string,\n    root: any,\n    args: any,\n    context: any,\n    info: any,\n  ) => {\n    if (!{}.hasOwnProperty.call(root, info.resultKey)) {\n      throw new Error(`${info.resultKey} missing on ${JSON.stringify(root)}`);\n    }\n    return root[info.resultKey];\n  };\n\n  graphql(\n    resolver,\n    doc,\n    data,\n    {},\n    {},\n    {\n      fragmentMatcher: () => false,\n    },\n  );\n}\n\n// Lifted/adapted from\n//   https://github.com/facebook/react/blob/master/src/isomorphic/classic/types/ReactPropTypes.js\nconst ANONYMOUS = '<<anonymous>>';\nfunction PropTypeError(message) {\n  this.message = message;\n  this.stack = '';\n}\n// Make `instanceof Error` still work for returned errors.\nPropTypeError.prototype = Error.prototype;\n\nconst reactPropTypeLocationNames = {\n  prop: 'prop',\n  context: 'context',\n  childContext: 'child context',\n};\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(\n    isRequired,\n    props,\n    propName,\n    componentName,\n    location,\n    propFullName,\n  ) {\n    componentName = componentName || ANONYMOUS;\n    propFullName = propFullName || propName;\n    if (props[propName] == null) {\n      const locationName = reactPropTypeLocationNames[location];\n      if (isRequired) {\n        if (props[propName] === null) {\n          return new PropTypeError(\n            `The ${locationName} \\`${propFullName}\\` is marked as required ` +\n              `in \\`${componentName}\\`, but its value is \\`null\\`.`,\n          );\n        }\n        return new PropTypeError(\n          `The ${locationName} \\`${propFullName}\\` is marked as required in ` +\n            `\\`${componentName}\\`, but its value is \\`undefined\\`.`,\n        );\n      }\n      return null;\n    } else {\n      return validate(props, propName, componentName, location, propFullName);\n    }\n  }\n\n  const chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\n\nexport function propType(doc) {\n  return createChainableTypeChecker((props, propName) => {\n    const prop = props[propName];\n    try {\n      if (!prop.loading) {\n        check(doc, prop);\n      }\n      return null;\n    } catch (e) {\n      // Need a much better error.\n      // Also we aren't checking for extra fields\n      return e;\n    }\n  });\n}\n"],"names":["getMainDefinition","getFragmentDefinitions","createFragmentMap","shouldInclude","isField","resultKeyNameFromField","isInlineFragment","argumentsObjectFromField","getDirectiveInfoFromField"],"mappings":"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"}